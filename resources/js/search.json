[[{"l":"Добро пожаловать","p":["Стартовая страница"]}],[{"l":"Iptables","p":["iptables -P- настройка правила по умолчанию","iptables -S- посмотреть правила таблицы FILTER","iptables -t nat -S- посмотреть правила таблицы NAT"]}],[{"l":"Sample","p":["This is a sample page demonstrating page metadata."]}],[{"l":"ДемоЭкзамен 2025","p":["This is a sample page demonstrating page metadata."]}],[{"l":"Block User","p":["usermod -L"]}],[{"l":"Certs","p":["Сертификат от корпоративного CA FreeIPA","На рабочем клиенте:","При создании сертификата учитывайте параметры SAN (subjectAltName), их может быть очень много. А также AuthType Экспорт из NSS Базы данных в RAW формат"]}],[{"l":"DNS между филиалами","p":["DNS между филиалами В freeipa заходим на SRV-KLG(Сетевые службы->DNS->зоны перенаправления){Создаём зону rzn.jun.profi Перенаправители зон: 192.168.20.1; 10.0.0.1} Идём в зоны DNS; Добавляем ip-сеть обратной зоны всей сети rzn Потом nano /etc/named.conf Ищем путь /etc/bind/ipa-options-ext.conf И пишем Dnssec-validation no; Allow-query { any; }; Allow-recursion { any; }; Allow-transfer { any; }; На opnsense В srvices-> bind -> Configuration DNS forwarders 192.168.11.100 100.100.100.100"]}],[{"l":"Docker","p":["Короче, нужно скачать несколько пакетов","apt-get install docker-engine docker-compose python3-module-dockerpty","Обязательно запустить","systemctl enable --now docker","После команды compose лучше делать так:","docker compose up -d- то есть без \"-\" в команде"]}],[{"l":"Ipa","p":["ipa-server-install --mkhomedir --skip-mem-check --ca-subject \"CN=NEW CA\",\"O=NEW ORG\",\"C=RU\" --subject-base \"O=NEW ORG\",\"C=RU\""]}],[{"l":"Iptables on ARM"}],[{"i":"joomla-mysql","l":"Joomla (mysql)","p":["Этот конфиг если не получится сделать по параметрам!!!"]}],[{"i":"joomla-pgadmin","l":"Joomla (pgadmin)"}],[{"l":"Kea","p":["{\"Dhcp4\": {\"interfaces-config\": {\"interfaces\": [\"eth0\" ]},\"option-data\": [{\"name\": \"domain-name-servers\",\"data\": \"8.8.8.8, 8.8.4.4\"} ],\"subnet4\": [ { \"subnet\": \"192.168.1.0/24\", \"pools\": [ { \"pool\": \"192.168.1.100 - 192.168.1.200\" } ], \"option-data\": [ { \"name\": \"routers\", \"data\": \"192.168.1.1\" } }, { \"subnet\": \"10.0.0.0/24\", \"pools\": [ { \"pool\": \"10.0.0.100 - 10.0.0.200\" } ], \"option-data\": [ { \"name\": \"routers\", \"data\": \"10.0.0.1\" } ] } ] } }"]}],[{"l":"Kerberos для yandex browser","p":["Надо скачать сертификат (если правильно скачивали freeipa то они будут загружены)","Создаем папку","Создаем файл mydomain.json","Делаем конфиг внутри","Даем для папки chmod","Перезагружаем yandex browser","Заходим в компьютер под пользователем admin!!!"]}],[{"l":"Nmcli","p":["nmcli connection add type loopback con-name lo1 ifname lo ipv4.addresses 192.168.1.1/24"]}],[{"i":"ospf-on-alt-поверх-vrrp","l":"OSPF on alt (поверх vrrp)"}],[{"l":"Sudo","p":["chmod 4755 /usr/bin/sudo chmod 4755 /bin/su control sudo public"]}],[{"i":"vrrp-alt-linux","l":"VRRP (alt linux)","p":["Это мы делаем на R2-KLG тоесть главный","Это делаем на R3-KLG тоесть не главный Обязательно указываем приоритет 99, и в state BACKUP"]}],[{"l":"Vsftpd","p":["Установить пакеты:","apt-get install vsftpd anonftp","Сделать изменения в файле /etc/xinetd.d/vsftpd","disable = no #включает сервис","Проверить глобальные настройки xinetd в файле /etc/xinetd.conf, обратить внимание (возможно закомментировать) на строку","only_from = 0.0.0.0","В файле /etc/vsftpd.conf","Указать корректную домашнюю директорию пользователя","usermod -d /to/path user","Дать корректные права на домашнюю директорию пользователя, который подключатся по ftp","Перезапустить сервис","service xinetd restart ИЛИ systemctl restart xinetd","Установить запуск сервиса xinetd при загрузке системы","chkconfig xinetd on ИЛИ systemctl enable --now xinetd"]}],[{"i":"zabbix-без-контейнера","l":"Zabbix (без контейнера)","p":["```python user@debian wget https://repo.zabbix.com/zabbix/7.0/debian/pool/main/z/zabbix-release/zabbix-release_7.0-1+debian12_all.deb user@debian dpkg -i zabbix-release_7.0-1+debian12_all.deb user@debian apt update user@debian apt install zabbix-server-mysql zabbix-frontend-php zabbix-nginx-conf zabbix-sql-scripts zabbix-agent user@debian apt install mariadb user@debian mysql -u root -p mysql> create database zabbix character set utf8mb4 collate utf8mb4_bin; mysql> create user zabbix@localhost identified by 'P@ssw0rd'; mysql> grant all privileges on zabbix.* to zabbix@localhost; mysql> set global log_bin_trust_function_creators = 1; mysql> flush privileges; mysql> quit; user@debian zcat /usr/share/zabbix-sql-scripts/mysql/server.sql.gz | mysql --default-character-set=utf8mb4 -uzabbix -p zabbix user@debian mysql -uroot -p mysql> set global log_bin_trust_function_creators = 0; mysql> quit; user@debian nano /etc/zabbix/zabbix_server.conf... DBPassword=P@ssw0rd... user@debian nano /etc/nginx/conf.d/zabbix.conf...#раскоментим первые две строки listen 80; server_name _;... user@debian nano /etc/nginx/sites-available/default...#коментим весь файл... user@debian systemctl restart zabbix-server zabbix-agent nginx user@debian systemctl enable zabbix-server zabbix-agent nginx"]}]]